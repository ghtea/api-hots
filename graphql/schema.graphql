
type HeroBasic {
  
  _id: ID!
  idHeroesTalents: String!
  
  name: String!
  role: String!
  type: String!
  
  tags: [String]
}
 
 
 
 

type ModeMmr {
  mmr: Int
  games_played: Int
  league_tier: String
}


type RegionMmr {
  QM: ModeMmr
  UD: ModeMmr
  HL: ModeMmr
  TL: ModeMmr
  SL: ModeMmr
}


type PlayerMmr {
  _id: ID!
  
  NA: RegionMmr
  EU: RegionMmr
  KR: RegionMmr
  CN: RegionMmr
}




type MmrStandard {
  NA: Int
  EU: Int
  KR: Int
  CN: Int 
}
 
type RoleGame {
  auto: [Int]
  manual: [Int]
}


type PlayerEntry {
  _id: ID!
  
  mmrStandard: MmrStandard
  
  roleGame: RoleGame
  roleReal: [String]
  
  group: [String]
  
  language: [String]
  
  tag: [String]
}
 
 
 type TeamGenerated {
  _id: ID!
  listPlayerBattletag: [String!]
  name: String
  group: String
 }
 
 
 type ResultGenerated {
  _id: ID!
  
  listTeam: [TeamGenerated]!
  
 }
 
 
 type PlanTeam {
  _id: ID!
  
  region: String
  
  listPlayerEntry: [PlayerEntry]
  listGroup: [String]
  listResult: [ResultGenerated]
  
  option: String
 }
 
 
 
 
 
 
 
 
 
type Query {
  getHeroBasics: [HeroBasic]!
  
  getHeroBasic(_id: ID!): HeroBasic
  
  readPlayerMmr(_id: ID!): PlayerMmr
}


type Mutation {
  addPlayerMmr(_id: ID!): String
  
  addPlanTeam: String
}